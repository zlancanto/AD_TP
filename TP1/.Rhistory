tabac = read.table("tabac.txt", header = T, row.names = 1)
tabac # permet d
’afficher le tableau
tabac$Vente # permet de recuperer un vecteur avec toutes les valeurs de la variable Ventes
tabac$Prix # permet de recuperer un vecteur avec toutes les valeurs de la variable Prix
getwd()
tabac
tabac = read.table("tabac.txt", header = T, row.names = 1)
tabac
tabac$Vente
tabac$Prix
mean(tabac$Prix)
mean(tabac$Vente)
cor(tabac$Prix, tabac$Vente)
cor(tabac$Prix, tabac$Vente)
plot(tabac$Prix, tabac$Vente)
plot(tabac$Prix,tabac$Vente, 
main="Consommation de tabac en France",
col="blue",lwd=2,
xlab="Prix relatif de vente (en euros)",
ylab="Nombre de cigarettes vendues (en milliards)")
plot(tabac$Prix,tabac$Vente, 
main="Consommation de tabac en France",
col="blue",lwd=2,
xlab="Prix relatif de vente (en euros)",
ylab="Nombre de cigarettes vendues (en milliards)")
plot(tabac$Prix,tabac$Vente, main="Consommation de tabac en France",col="blue",lwd=2, xlab="Prix relatif de vente (en euros)", ylab="Nombre de cigarettes vendues (en milliards)")
reg = lm(Vente~Prix, data = tabac)
reg
reg$coefficients
abline(reg, col="red")
summary(reg)
reg$residuals
reg$residuals[2000]
reg$residuals[16]
round(reg$residuals,3)
reg$fitted.values
sum(reg$residuals)
round(sum(reg$residuals), 3)
sum(reg$residuals^2)
meanY = reg$Vente
meanY
meanY = mean(tabac$Vente)
meanY
reg
sum(tabac$Vente - meanY)
tabac$Vente
sum((tabac$Vente - meanY)^2)
SCEm = SCEt - SCEr
SCEm
#3
SCEr = sum(reg$residuals^2)
SCEr
#4
meanY = mean(tabac$Vente)
SCEt = sum((tabac$Vente - meanY)^2)
SCEt
#5
SCEm = SCEt - SCEr
SCEm
SCEm/SCEt
#6
R2 = SCEm/SCEt
R2
R2 = summary(reg)$r.squared
R2
varianceResiduelle = summary(reg)$sigma^2
varianceResiduelle
varianceResiduelle = SCEr/(length(tabac$Vente) -1 -1)
varianceResiduelle = summary(reg)$sigma^2
varianceResiduelle
varianceResiduelle = summary(reg)$sigma^2
varianceResiduelle
varianceResiduelle = SCEr/(length(tabac$Vente) -1 -1)
varianceResiduelle
summary(reg)$coefficients
summary(reg)$coefficients[2,3]
#9
probaCritique = summary(reg)$coefficients[2,4]
probaCritique
# Conclusion : probaCritique < 5% donc on refuse H0 et on accepte H1
varianceResiduelle = summary(reg)$sigma^2
varianceResiduelle
lengthVente = length(tabac$Vente)
varianceResiduelle = SCEr/lengthVente  -1 -1)
varianceResiduelle
varianceResiduelle = summary(reg)$sigma^2
varianceResiduelle
lengthVente = length(tabac$Vente)
varianceResiduelle = SCEr/(lengthVente  -1 -1)
varianceResiduelle
testFisher = (SCEm * (lengthVente -1 -1))/SCEr * 1
testFisher
testFisher = summary(reg)$fstatistic
testFisher
# Fisher(95%) = 4,2 et testFisher n'appartient pas à ZA(HO) = [0; 4,2]. Donc H1
#10
testFisher = (SCEm * (lengthVente -1 -1))/SCEr * 1
testFisher
testFisher = summary(reg)$fstatistic[1]
testFisher
# Fisher(95%) = 4,2 et testFisher n'appartient pas à ZA(HO) = [0; 4,2]. Donc H1
#10
testFisher = (SCEm * (lengthVente -1 -1))/SCEr * 1
testFisher
summary(reg)$fstatistic[1]
# Fisher(95%) = 4,2 et testFisher n'appartient pas à ZA(HO) = [0; 4,2]. Donc H1
#10
testFisher = (SCEm * (lengthVente -1 -1))/SCEr * 1
testFisher
summary(reg)$fstatistic
# Fisher(95%) = 4,2 et testFisher n'appartient pas à ZA(HO) = [0; 4,2]. Donc H1
#11
# creation du nouvel individu avec sa valeur de Prix
new = data.frame(288.3)
# label de la variable explicative
colnames(new) = "Prix"
# pour pr´ediction moyenne
predict(reg, new, interval = "confidence")
mat<-read.table("materiau.txt",header=T)
mat
#1
R2X1 = summary(regX1)$r.squared
R2X2 = summary(regX2)$r.squared
R2Mul = summary(regmul)$r.squared
R2X1
R2X2
R2Mul
mat = read.table("materiau.txt",header=T)
mat
regX1 = lm(Y~X1, data = mat)
regX2 = lm(Y~X2, data = mat)
regmul = lm(Y~X1+X2,data=mat)
#1
R2X1 = summary(regX1)$r.squared
R2X2 = summary(regX2)$r.squared
R2Mul = summary(regmul)$r.squared
R2X1
R2X2
R2Mul
CMrX1 = sum(regX1$residuals^2)/(length(mat$X1) -2 -1)
CMrX2 = sum(regX2$residuals^2)/(length(mat$X2) -2 -1)
CMrMul = sum(regmul$residuals^2)/(length(mat$X1) -2 -1)
CMrX1
CMrX2
CMrMul
CMrX1 = sum(regX1$residuals^2)/(length(mat$X1) -1 -1)
CMrX2 = sum(regX2$residuals^2)/(length(mat$X2) -1 -1)
CMrMul = sum(regmul$residuals^2)/(length(mat$X1) -2 -1)
CMrX1
CMrX2
CMrMul
sigmatX1 = sqrt(CMrX1)
sigmatX2 = sqrt(CMrX2)
sigmatMul = sqrt(CMrMul)
sigmatX1
sigmatX2
sigmatMul
meanY = mean(mat$Y)
SCEt = sum((mat$Y - meanY)^2)
CMmMul = (SCEt * R2Mul)/2
CMmMul
# H0 : Aucune des deux variables X1 et X2 n'influence Y
# H1 : Au moins une des deux variables X1 et X2 influence Y
testFisherMul = CMmMul/CMrMul
testFisherMul
# testFisherMul n'appartient pas à ZA(H0) = [0; Fisher(0,95)] = [0; 4,26], donc H1
CMmX1 = (SCEt * R2X1)/2
testFisherX1 = CMmX1/CMrX1
testFisherX1
# testFisherX1 n'appartient pas à ZA(H0) = [0; Fisher(0,95)] = [0; 4,96], donc H1
CMmX1 = (SCEt * R2X1)/1
testFisherX1 = CMmX1/CMrX1
testFisherX1
tabac = read.table("tabac.txt", header = T, row.names = 1)
tabac # permet d’afficher le tableau
tabac$Vente # permet de recuperer un vecteur avec toutes les valeurs de la variable Ventes
tabac$Prix # permet de recuperer un vecteur avec toutes les valeurs de la variable Prix
getwd()
tabac
tabac = read.table("tabac.txt", header = T, row.names = 1)
tabac
tabac$Vente
tabac$Prix
mean(tabac$Prix)
mean(tabac$Vente)
cor(tabac$Prix, tabac$Vente)
cor(tabac$Prix, tabac$Vente)
plot(tabac$Prix, tabac$Vente)
plot(tabac$Prix,tabac$Vente, 
main="Consommation de tabac en France",
col="blue",lwd=2,
xlab="Prix relatif de vente (en euros)",
ylab="Nombre de cigarettes vendues (en milliards)")
plot(tabac$Prix,tabac$Vente, 
main="Consommation de tabac en France",
col="blue",lwd=2,
xlab="Prix relatif de vente (en euros)",
ylab="Nombre de cigarettes vendues (en milliards)")
plot(tabac$Prix,tabac$Vente, main="Consommation de tabac en France",col="blue",lwd=2, xlab="Prix relatif de vente (en euros)", ylab="Nombre de cigarettes vendues (en milliards)")
reg = lm(Vente~Prix, data = tabac)
reg
reg$coefficients
abline(reg, col="red")
summary(reg)
reg$residuals
reg$residuals[2000]
reg$residuals[16]
round(reg$residuals,3)
reg$fitted.values
sum(reg$residuals)
round(sum(reg$residuals), 3)
sum(reg$residuals^2)
meanY = reg$Vente
meanY
meanY = mean(tabac$Vente)
meanY
reg
sum(tabac$Vente - meanY)
tabac$Vente
sum((tabac$Vente - meanY)^2)
SCEm = SCEt - SCEr
SCEm
#3
SCEr = sum(reg$residuals^2)
SCEr
#4
meanY = mean(tabac$Vente)
SCEt = sum((tabac$Vente - meanY)^2)
SCEt
#5
SCEm = SCEt - SCEr
SCEm
SCEm/SCEt
#6
R2 = SCEm/SCEt
R2
R2 = summary(reg)$r.squared
R2
varianceResiduelle = summary(reg)$sigma^2
varianceResiduelle
varianceResiduelle = SCEr/(length(tabac$Vente) -1 -1)
varianceResiduelle = summary(reg)$sigma^2
varianceResiduelle
varianceResiduelle = summary(reg)$sigma^2
varianceResiduelle
varianceResiduelle = SCEr/(length(tabac$Vente) -1 -1)
varianceResiduelle
summary(reg)$coefficients
summary(reg)$coefficients[2,3]
#9
probaCritique = summary(reg)$coefficients[2,4]
probaCritique
# Conclusion : probaCritique < 5% donc on refuse H0 et on accepte H1
varianceResiduelle = summary(reg)$sigma^2
varianceResiduelle
lengthVente = length(tabac$Vente)
varianceResiduelle = SCEr/lengthVente  -1 -1)
varianceResiduelle
varianceResiduelle = summary(reg)$sigma^2
varianceResiduelle
lengthVente = length(tabac$Vente)
varianceResiduelle = SCEr/(lengthVente  -1 -1)
varianceResiduelle
testFisher = (SCEm * (lengthVente -1 -1))/SCEr * 1
testFisher
testFisher = summary(reg)$fstatistic
testFisher
# Fisher(95%) = 4,2 et testFisher n'appartient pas à ZA(HO) = [0; 4,2]. Donc H1
#10
testFisher = (SCEm * (lengthVente -1 -1))/SCEr * 1
testFisher
testFisher = summary(reg)$fstatistic[1]
testFisher
# Fisher(95%) = 4,2 et testFisher n'appartient pas à ZA(HO) = [0; 4,2]. Donc H1
#10
testFisher = (SCEm * (lengthVente -1 -1))/SCEr * 1
testFisher
summary(reg)$fstatistic[1]
# Fisher(95%) = 4,2 et testFisher n'appartient pas à ZA(HO) = [0; 4,2]. Donc H1
#10
testFisher = (SCEm * (lengthVente -1 -1))/SCEr * 1
testFisher
summary(reg)$fstatistic
# Fisher(95%) = 4,2 et testFisher n'appartient pas à ZA(HO) = [0; 4,2]. Donc H1
#11
# creation du nouvel individu avec sa valeur de Prix
new = data.frame(288.3)
# label de la variable explicative
colnames(new) = "Prix"
# pour pr´ediction moyenne
predict(reg, new, interval = "confidence")
mat<-read.table("materiau.txt",header=T)
mat
#1
R2X1 = summary(regX1)$r.squared
R2X2 = summary(regX2)$r.squared
R2Mul = summary(regmul)$r.squared
R2X1
R2X2
R2Mul
mat = read.table("materiau.txt",header=T)
mat
regX1 = lm(Y~X1, data = mat)
regX2 = lm(Y~X2, data = mat)
regmul = lm(Y~X1+X2,data=mat)
#1
R2X1 = summary(regX1)$r.squared
R2X2 = summary(regX2)$r.squared
R2Mul = summary(regmul)$r.squared
R2X1
R2X2
R2Mul
CMrX1 = sum(regX1$residuals^2)/(length(mat$X1) -2 -1)
CMrX2 = sum(regX2$residuals^2)/(length(mat$X2) -2 -1)
CMrMul = sum(regmul$residuals^2)/(length(mat$X1) -2 -1)
CMrX1
CMrX2
CMrMul
CMrX1 = sum(regX1$residuals^2)/(length(mat$X1) -1 -1)
CMrX2 = sum(regX2$residuals^2)/(length(mat$X2) -1 -1)
CMrMul = sum(regmul$residuals^2)/(length(mat$X1) -2 -1)
CMrX1
CMrX2
CMrMul
sigmatX1 = sqrt(CMrX1)
sigmatX2 = sqrt(CMrX2)
sigmatMul = sqrt(CMrMul)
sigmatX1
sigmatX2
sigmatMul
meanY = mean(mat$Y)
SCEt = sum((mat$Y - meanY)^2)
CMmMul = (SCEt * R2Mul)/2
CMmMul
# H0 : Aucune des deux variables X1 et X2 n'influence Y
# H1 : Au moins une des deux variables X1 et X2 influence Y
testFisherMul = CMmMul/CMrMul
testFisherMul
# testFisherMul n'appartient pas à ZA(H0) = [0; Fisher(0,95)] = [0; 4,26], donc H1
CMmX1 = (SCEt * R2X1)/2
testFisherX1 = CMmX1/CMrX1
testFisherX1
# testFisherX1 n'appartient pas à ZA(H0) = [0; Fisher(0,95)] = [0; 4,96], donc H1
CMmX1 = (SCEt * R2X1)/1
testFisherX1 = CMmX1/CMrX1
testFisherX1
mat$coefficients
regX1$coefficients
regX1
summary(regX1)
summaryRegX1 = summary(regX1)
summary_regX1$coefficients["X1", "Pr(>|t|)"]
summary_regX1$coefficients["X1", "Pr(>|t|)"]
summaryRegX1 = summary(regX1)
summaryRegX1$coefficients["X1", "Pr(>|t|)"]
summaryRegX1 = summary(regX1)
pcX1 = summaryRegX1$coefficients["X1", "Pr(>|t|)"]
pcX1
# pcX1 < 0.05 donc H1
regmul
summary(regmul)
new <- data.frame(X1 = 3.5, X2 = 3.9)
prediction = predict(reg, new, interval = "confidence")
prediction
new = data.frame(X1 = 3.5, X2 = 3.9)
prediction = predict(regmul, new, interval = "confidence")
prediction
new = data.frame(288.3) # cr´eation du nouvel individu avec sa valeur
de Prix
colnames(new) = "Prix" # label de la variable explicative
predict(reg, new, interval = "confidence")
new = data.frame(288.3)
predict(reg, new, interval = "confidence")
colnames(new) = "Prix"
predict(reg, new, interval = "confidence")
predict(reg, new, interval = "confidence")
prediction
prediction["fit"]
prediction[1]
